name: Release Management

on:
  push:
    tags: ['v*']
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate changelog
        id: changelog
        uses: actions/github-script@v7
        with:
          script: |
            const { data: commits } = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'main',
              head: context.sha
            });
            
            const changelog = commits.commits
              .map(commit => `- ${commit.commit.message}`)
              .join('\n');
            
            return changelog;

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.result }}
            
            ## Installation
            
            ```bash
            npm install lowkey-primal-genesis@${{ github.ref_name }}
            ```
            
            ## Documentation
            
            - [README](https://github.com/${{ github.repository }}#readme)
            - [Contributing](https://github.com/${{ github.repository }}/blob/main/CONTRIBUTING.md)
            - [Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
            
            ## Support
            
            - Discord: [LowKey Community](https://discord.gg/lowkey)
            - Email: support@lowkey-project.com
            - Issues: [GitHub Issues](https://github.com/${{ github.repository }}/issues)
          draft: false
          prerelease: false

      - name: Publish to npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.zip
            dist/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: create-release
    if: success()
    
    steps:
      - name: Send Discord notification
        uses: appleboy/discord-action@v1.0.0
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: |
            ðŸŽ‰ **New Release: ${{ github.ref_name }}** for ${{ github.repository }}
            - Author: ${{ github.actor }}
            - [Download Release](https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }})
            - [View Changelog](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)

      - name: Send Email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          subject: 'ðŸŽ‰ New Release: ${{ github.ref_name }} - ${{ github.repository }}'
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: ${{ secrets.SMTP_USER }}
          body: |
            New release ${{ github.ref_name }} has been published for ${{ github.repository }}
            
            Download: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
            Changelog: https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md
            
            Published by: ${{ github.actor }}

  update-documentation:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: create-release
    if: success()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate API documentation
        run: npm run docs:generate

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          destination_dir: ./docs

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: create-release
    if: success()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Run CodeQL analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: create-release
    if: success()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
          uploadArtifacts: true
          temporaryPublicStorage: true

  final-notification:
    name: Final Release Notification
    runs-on: ubuntu-latest
    needs: [notify-release, update-documentation, security-scan, performance-test]
    if: always()
    
    steps:
      - name: Send final Discord notification
        uses: appleboy/discord-action@v1.0.0
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: |
            ðŸš€ **Release ${{ github.ref_name }} Complete** for ${{ github.repository }}
            - Documentation: Updated âœ…
            - Security Scan: ${{ needs.security-scan.result }}
            - Performance Test: ${{ needs.performance-test.result }}
            - [View Release](https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}) 